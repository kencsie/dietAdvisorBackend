openapi: "3.0.3"
info:
  title: "dietAdvisorBackend API"
  version: "0.2.0"
servers:
  - url: "https://diet.kencs.net"
paths:
  /login:
    get:
      summary: "Initiate user login via OAuth"
      operationId: "initiateLogin"
      tags:
        - Authentication
      responses:
        '302':
          description: "Redirect to OAuth provider for authentication"
          headers:
            Location:
              description: "URL to redirect to"
              schema:
                type: string
                example: "/callback"

  /user:
    post:
      summary: "Create a new user"
      operationId: "createUser"
      security:
        - bearerAuth: []
      tags:
        - OAuthUser
      requestBody:
        description: "User data needed to create a new user"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthUser'
      responses:
        '201':
          description: "User created successfully"
        '409':
          description: "Conflict - User already exists"
        '400':
          description: "Bad request - Error processing request"

    get:
      summary: "Read user information"
      operationId: "readUser"
      security:
        - bearerAuth: []
      tags:
        - OAuthUser
      responses:
        '200':
          description: "User found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthUser'
        '404':
          description: "User not found"
        '400':
          description: "Bad request - Error processing request"
          
    put:
      summary: "Update user information"
      operationId: "updateUser"
      security:
        - bearerAuth: []
      tags:
        - OAuthUser
      requestBody:
        description: "User data to update the existing user"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthUser'
      responses:
        '200':
          description: "User modified successfully"
        '404':
          description: "User not found"
        '400':
          description: "Bad request - Error processing request"

    delete:
      summary: "Delete a user"
      operationId: "deleteUser"
      security:
        - bearerAuth: []
      tags:
        - OAuthUser
      responses:
        '200':
          description: "User deleted successfully"
        '404':
          description: "User not found"
        '400':
          description: "Bad request - Error processing request"

  /yolo:
    post:
      summary: "Process an image with YOLO model"
      operationId: "processYolo"
      tags:
        - Image Processing
      requestBody:
        description: "Multipart form data containing the image file"
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: "Image to be processed by YOLO"
      responses:
        '200':
          description: "Image processed successfully"
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: "Bad request - No image uploaded"

  /calorie:
    post:
      summary: "Estimate calorie count from an image"
      operationId: "estimateCalories"
      tags:
        - Calorie Estimation
      requestBody:
        description: "Multipart form data containing the image file and related JSON data"
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: "Image of the food item"
                data:
                  type: string
                  description: "JSON formatted additional data about the food item"
      responses:
        '200':
          description: "Calorie estimation provided"
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: "Bad request - Required data not uploaded"

  /recommendation:
    post:
      summary: Generates a recommendation using a provided model and prompt.
      description: This endpoint accepts a model identifier and a prompt, then generates a recommendation based on the input.
      tags:
        - Recommendation
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                model:
                  type: string
                  description: The identifier of the model to use.
                  enum: ['gemma2:27b', 'llava:34b-v1.6', 'mistral-nemo:latest', 'llama3.1:latest']
                prompt:
                  type: string
                  description: The prompt based on which the recommendation will be generated.
              required:
                - model
                - prompt
      responses:
        200:
          description: Successfully generated a recommendation.
          content:
            application/json:
              schema:
                type: string
                description: The response from the recommendation engine.
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message explaining what went wrong.

components:
  schemas:
    OAuthUser:
      type: object
      properties:
        userID:
          type: string
        userName:
          type: string
        birthDate:
          type: string
          format: date
          description: "Birth date in YYYY/MM/DD format"
        gender:
          $ref: '#/components/schemas/Gender'
        weight:
          type: integer
        height:
          type: integer
        dietaryGoal:
          $ref: '#/components/schemas/DietaryGoal'
        language:
          $ref: '#/components/schemas/Language'
      required:
        - userID
        - userName
        - birthDate
        - gender
        - weight
        - height
        - dietaryGoal
        - language

    Gender:
      type: string
      enum:
        - Male
        - Female
        - Non-binary

    DietaryGoal:
      type: string
      enum:
        - Gain weight
        - Stay the same
        - Lose weight

    Language:
      type: string
      enum:
        - English
        - Chinese
  
    Message:
      type: object
      properties:
        role:
          type: string
          description: Role of the sender in the conversation, typically 'user' or 'system'.
        content:
          type: string
          description: Content of the message sent.
      required:
        - role
        - content

    ChatRequest:
      type: object
      properties:
        model:
          type: string
          description: The identifier of the model to use.
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        stream:
          type: boolean
          description: Indicates whether the response should be streamed.
      required:
        - model
        - messages
        - stream
  
  securitySchemes:
    bearerAuth:
        type: http
        scheme: bearer